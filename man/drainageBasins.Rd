% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drainageBasins.R
\name{drainageBasins}
\alias{drainageBasins}
\title{Watershed/basin delineation}
\usage{
drainageBasins(
  DEM,
  points,
  streams = NULL,
  projection = NULL,
  snap = "nearest",
  snap_dist = 200,
  breach_dist = 50,
  overwrite = FALSE,
  save_path = "choose",
  force_update_wbt = FALSE
)
}
\arguments{
\item{DEM}{The path to a DEM including extension from which to delineate watersheds/catchments. Must be in .tif format. Note that a new raster will be written with either the projection of the points layer or of the projection specified. Reprojection is time-consuming, try to use an existing DEM if at all possible.}

\item{points}{The path to the points shapefile containing the points from which to build watersheds. As shapefiles have multiple associated files, point to the .shp file only. The attribute table of this shapefile will not be used, only the geometry. If parameter 'projection' is not specified, the crs of this layer will be used to set the crs of the DEM and subsequently calculated intermediary and output layers.}

\item{streams}{Optionally, the path to the polylines shapefile containing streams, which will be used to improve accuracy when using poor quality DEMs. If this shapefile is the only input parameter being modified from previous runs (i.e. you've found a new/better streams shapefile) then simply run this function with a shapefile specified for this parameter to incorporate this new layer.}

\item{projection}{Optionally, specify a projection string in the form epsg:3579 (find them \href{https://epsg.io/}{here}). The inputs poinst and all derived processing and output layers will use this projection. If no projection is specified the projection of the points will be used.}

\item{snap}{Snap to the "nearest" derived (calculated) stream, or to the "greatest" flow accumulation cell within the snap distance? Beware that "greatest" will move the point downstream by up to the 'snap_dist' specified, while nearest might snap to the wrong stream.}

\item{snap_dist}{The search radius within which to snap points to streams. Snapping method depends on 'snap' parameter. Note that distance units will match the projection, so probably best to work on a meter grid.}

\item{breach_dist}{The max radius (in raster cells) for which to search for a path to breach depressions, passed to whitebox::wbt_breach_depressions_least_cost. Setting a large number here dramatically increases the tool's run time, as the number of possible solutions to sort through increase rapidly. Unbreached depressions are filled if any remain after breaching depressions.}

\item{overwrite}{If applicable, should rasters present in the same directory as the DEM be overwritten? This will also force the recalculation of derived layers.}

\item{save_path}{The path where you want the output shapefiles saved. Default "choose" lets you choose interactively.}

\item{force_update_wbt}{WhiteboxTools is by default only downloaded if it cannot be found on the computer, and no check are performed to ensure the local version is current. Set to TRUE if you know that there is a new version and you would like to use it.}
}
\value{
Saved to disk: an ESRI shapefile for each drainage basin, plus the associated pour point and the point as provided, all in a separate folder for each basin.
}
\description{
NOTE 1: This tool can be extremely slow to execute, and will use a lot of memory. Be patient, it might take several hours with a large DEM, even days on first run or when recalculating flow rasters.
NOTE 2: If you are have already run this tool and are using a DEM in the same directory as last time, you only need to specify the DEM and the points (and, optionally, a projection). Operations using the streams shapefile and generating flow accumulation, etc rasters do not need to be repeated unless you want to use a different DEM or streams shapefile.
NOTE 3: This function is very memory (RAM) intensive, despite performing most raster operations to disk rather than holding information in memory. You'll want at least 16GB of RAM, and to ensure that most of it is free. If you get an error such as 'cannot allocate xxxxx bytes', you probably don't have the resources to run the tool. The WhiteboxTool functions in particular are memory hungry: for a 32-bit float raster, requires ~4-8x the raster size on disk to be available in memory. For the whole Yukon at a resolution of 16.9 meters (the CDEM), you'll need 32 or even 64 GB of RAM.
Delineates watersheds above one or more points using \href{www.whiteboxgeo.com/}{Whitebox Tools}. To facilitate this task in areas with poor quality/low resolution DEMs, can "burn-in" a stream network to the DEM to ensure proper stream placement. Many time-consuming raster operations are performed, so the function will attempt to use already-calculated rasters if they are present in the same path as the base DEM and named according to the function's naming conventions. In practice, this means that only the first run of the function needs to be very time consuming. See additional details below for processing steps.
}
\details{
This function uses software from the Whitebox geospatial analysis package, built by Prof. John Lindsay. Refer to \href{https://www.whiteboxgeo.com/manual/wbt_book/intro.html}{this link} for more information.

Explanation of process: starting from a supplied DEM, the function will burn-in a stream network depression (ensuring that flow accumulations happen in the correct location), breach depressions in the digital elevation model using a least-cost algorithm (i.e. using the pathway resulting in minimal changes to the DEM) then calculate flow accumulation and direction rasters. Then, a raster of streams is created from flow accumulation/direction rasters. The points provided by the user are then snapped to the derived streams raster and watersheds are computed using the flow direction rasters. Finally, the watershed/drainage basin polygons are saved to the specified save path along with the provided points and the snapped pour points.
}
